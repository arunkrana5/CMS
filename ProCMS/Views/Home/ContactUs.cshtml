@model Query.Add
@{
    string DesignKey = "design" + clsApplicationSetting.GetWebConfigValue("DesignKey") + "/";
    string Prefix = "/assets/";

    string Version = clsApplicationSetting.GetWebConfigValue("Version");

}

@using (Ajax.BeginForm("ContactUs", "Home",
new AjaxOptions { HttpMethod = "POST", OnSuccess = "BindContactTarget" },
new { @id = "_ContactUsForm", @class = "form-horizontal form-label-left input_mask", enctype = "multipart/form-data" })
)
{
    <div id="contact" class="cnt-frm contact-form">
        <h2>Get in touch with us</h2>
        <div class="row">

            <div class="col-lg-6  form-group">
                <label>Your Name </label>
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @placeholder = "Enter" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-6  form-group">
                <label>Your Email </label>
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "Enter" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-6  form-group">
                <label>Mobile No. </label>
                @Html.TextBoxFor(model => model.Mobile, new { @class = "form-control", @placeholder = "Enter" })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-6  form-group">
                <label>Subject </label>
                @Html.TextBoxFor(model => model.Subject, new { @class = "form-control", @placeholder = "Enter" })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-12 form-group">
                <label>Your Message: </label>
                @Html.TextAreaFor(model => model.Query, new { @class = "form-control", @placeholder = "Enter", @cols = "4" })
                @Html.ValidationMessageFor(model => model.Query, "", new { @class = "text-danger" })
            </div>


            <div class="col-md-12 text-center ">
                <button type="submit" class="blue-btn" name="Command" value="Add"><i class="fa fa-paper-plane" aria-hidden="true"></i> Submit</button>
            </div>
        </div>


    </div>

}



    @Html.IncludeVersionedJs(Url.Content(Prefix + "js/jquery.unobtrusive-ajax.min.js"))
    @Html.IncludeVersionedJs(Url.Content(Prefix + "js/jquery.validate.min.js"))
    @Html.IncludeVersionedJs(Url.Content(Prefix + "js/jquery.validate.unobtrusive.min.js"))

    <script>


        function BindContactTarget(obj) {
            if (obj.Status) {
                SuccessToaster(obj.SuccessMessage);
                $("#_ContactUsForm").trigger('reset');

            }
            else {

                FailToaster(obj.SuccessMessage);
            }
        }

    </script>
