@model FAQ.Admin.Add
<div class="page-title">
    <div class="title_left">
        <h3>External Details</h3>
    </div>
</div>

<div class="x_panel">

    @using (Ajax.BeginForm("FAQAdd", "Masters",
        new { src = ViewBag.src },
         new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnBegin = "ShowLoadingDialog()" },
            new { @id = "FAQAddForm", enctype = "multipart/form-data" })
    )
    {

        @Html.HiddenFor(x => Model.FAQID)
    <div class="row">



        <div class="col-lg-6 col-md-6 col-sm-6 form-group">
            <label>Page URL<sup>*</sup></label>
            <div class="input-group">
                <input type="text" tag-value="@clsCommon.Encrypt("FAQ")" tag-id="@Model.FAQID" name="txtURL" id="txtURL" value="@Model.FAQURL" class="form-control" />
                <span class="input-group-addon">
                    <a id="btn_generateURL"><i class="fa fa-sign-out" aria-hidden="true"></i> Generate url</a>
                </span>
                @Html.ValidationMessageFor(model => model.FAQURL, "", new { @class = "text-danger" })
            </div>
            @Html.HiddenFor(model => model.FAQURL, new { @class = "hdnURL" })
            <div class="anchorShowURL">
                @Model.FAQURL
            </div>
        </div>

        <div class="col-lg-6 col-md-6 col-sm-6 form-group">
            <label>Priority<sup>*</sup></label>
            @Html.TextBoxFor(model => model.Priority, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
        </div>

        <div class="col-lg-12 col-md-12 col-sm-12 form-group">
            <label>Question<sup>*</sup></label>
            @Html.TextBoxFor(model => model.Question, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Question, "", new { @class = "text-danger" })
        </div>

        <div class="col-lg-12 col-md-12 col-sm-12 form-group">
            <label>Answer  <sup>*</sup></label>
            @Html.TextAreaFor(model => model.Answer, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
        </div>




    </div>

        <div class="row">

            @if (Model.FAQID > 0)
            {
                <button type="submit" class="btn mtr-o-grn btn-l ripplelink pull-right" name="Command" value="Add"><i class="fa fa-paper-plane" aria-hidden="true"></i> Update</button>
            }
            else
            {
                <button type="submit" class="btn mtr-o-grn btn-l ripplelink pull-right" name="Command" value="Add"><i class="fa fa-paper-plane" aria-hidden="true"></i> Submit</button>
            }
            <button type="button" class="btn cnl-btn ripplelink  pull-right" onclick="ShowLoadingDialog(); window.location = '@Url.Action("FAQList",new { src = clsCommon.Encrypt(ViewBag.MenuID+"*"+"/Admin/Masters/FAQList") })';"><i class="fa fa-times"></i> Cancel</button>

        </div>



    }

</div>
@Html.IncludeVersionedJs(Url.Content("~/ckeditor/ckeditor.js"))
@section scripts    {
    <script>
        var editor = CKEDITOR.instances[Answer];
        if (editor) { editor.destroy(true); }

        CKEDITOR.replace("Answer");

        function OnSuccess(obj) {
            if (obj.Status) {
                SuccessToaster(obj.SuccessMessage);
                window.location.href = obj.RedirectURL;
            }
            else {
                CloseLoadingDialog();
                FailToaster(obj.SuccessMessage);

            }
        }
    </script>
}