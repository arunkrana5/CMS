@model Product.Admin.Add

@Html.Partial("ProductHeader_Partial")

<div class="page-title">
    <div class="title_left">
        <h3>Product Details</h3>
    </div>
</div>

<div class="x_panel">

    @using (Ajax.BeginForm("ProductAdd", "Product",
        new { src = ViewBag.src },
         new AjaxOptions { HttpMethod = "POST", OnFailure = "OnPostFailure", OnSuccess = "OnSuccess", OnBegin = "ShowLoadingDialog()" },
            new { @id = "ProductAddForm", enctype = "multipart/form-data" })
    )
    {
        @Html.HiddenFor(x => Model.ProductID)
    <div class="row">

        <div class="col-lg-3 col-md-3 col-sm-6 form-group">
            <label>Product Name <sup>*</sup></label>
            @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => Model.ProductName, "", new { @class = "text-danger " })
        </div>



        <div class="col-lg-3 col-md-3 col-sm-6 form-group">
            <label>Amount</label>
            @Html.TextBoxFor(model => model.Amount, new { @class = "form-control", @type = "number" })
            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-3 col-md-3 col-sm-6 form-group">
            <label>Priority<sup>*</sup></label>
            @Html.TextBoxFor(model => model.Priority, new { @class = "form-control", @type = "number" })
            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-3 col-md-3 col-sm-6 form-group">
            <label>Category</label>
            @Html.HiddenFor(x => Model.CategoryIDs)
            <select class="applyselect" multiple="multiple" id="ddDropDown">
                <option>Select</option>
                @if (Model.CategoryList != null)
                {
                    foreach (var item in Model.CategoryList)
                    {
                        if (string.IsNullOrEmpty(Model.CategoryIDs))
                        {
                            <option value="@item.ID">@item.Name</option>
                        }
                        else
                        {
                            <option @(("@" + Model.CategoryIDs.Replace(",", "@") + "@").Contains("@" + item.ID.ToString() + "@") ? "selected" : "") value="@item.ID">@item.Name</option>
                        }

                    }
                }
            </select>
            @Html.ValidationMessageFor(model => model.CategoryIDs, "", new { @class = "text-danger" })
        </div>
    </div>
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 form-group">
                <label>Heading </label>
                @Html.TextBoxFor(model => model.ProductHeading, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductHeading, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">

            <div class="col-lg-6 col-md-6 col-sm-6 form-group">
                <label>Product URL<sup>*</sup></label>
                <div class="input-group">
                    <input type="text" tag-value="@clsCommon.Encrypt("Product")" tag-id="@Model.ProductID" name="txtURL" id="txtURL" value="@Model.ProductURL" class="form-control" />
                    <span class="input-group-addon">
                        <a id="btn_generateURL"><i class="fa fa-sign-out" aria-hidden="true"></i> Generate url</a>
                    </span>
                    @Html.ValidationMessageFor(model => model.ProductURL, "", new { @class = "text-danger" })
                </div>
                @Html.HiddenFor(model => model.ProductURL, new { @class = "hdnURL" })
                <div class="anchorShowURL">
                    @Model.ProductURL
                </div>
            </div>

            <div class="col-lg-12 col-md-12 col-sm-12 form-group">
                <label>Short Description </label>
                @Html.TextAreaFor(model => model.ProductShortDescription, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 form-group">
                <label>Product Description </label>
                @Html.TextAreaFor(model => model.ProductDescription, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 form-group">
                <label>Other Description </label>
                @Html.TextAreaFor(model => model.OtherDescription, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OtherDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-12 form-group">
            @if (Model.ProductID > 0)
            {
                <button type="submit" class="btn mtr-o-grn btn-l ripplelink pull-right" name="Command" value="Add"><i class="fa fa-paper-plane" aria-hidden="true"></i> Update</button>
            }
            else
            {
                <button type="submit" class="btn mtr-o-grn btn-l ripplelink pull-right" name="Command" value="Add"><i class="fa fa-paper-plane" aria-hidden="true"></i> Submit</button>
            }
            <button type="button" class="btn cnl-btn ripplelink pull-right" onclick="ShowLoadingDialog(); window.location = '@Url.Action("ProductList",new { src = clsCommon.Encrypt(ViewBag.MenuID+"*"+"/Admin/Product/ProductList") })';"><i class="fa fa-times"></i> Cancel</button>



        </div>
    }

</div>
@Html.IncludeVersionedJs(Url.Content("~/ckeditor/ckeditor.js"))
@section scripts    {
    <script>
        CKEDITOR.replace("ProductDescription");
        CKEDITOR.replace("OtherDescription");

        function OnSuccess(obj) {
            if (obj.Status) {
                SuccessToaster(obj.SuccessMessage);
                window.location.href = obj.RedirectURL;
            }
            else {
                CloseLoadingDialog();
                FailToaster(obj.SuccessMessage);

            }
        }

        $('#ddDropDown').change(function () {
            GetValue()
        });
        function GetValue() {
            var ddblogTag = $("#ddDropDown").val();
            $("#CategoryIDs").val(ddblogTag);
        }
    </script>
}
