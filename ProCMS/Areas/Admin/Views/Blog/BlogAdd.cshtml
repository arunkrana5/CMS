@model Blog.Admin.Add
<div class="page-title">
    <div class="title_left">
        <h3>Blog Details</h3>
    </div>
</div>

<div class="x_panel">

    @using (Ajax.BeginForm("BlogAdd", "Blog",
        new { src = ViewBag.src },
         new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnBegin = "ShowLoadingDialog()" },
            new { @id = "BlogAddAddForm", enctype = "multipart/form-data" })
    )
    {



        <div class="row">

            <div class="col-lg-3 col-md-3 col-sm-6 form-group">
                <label>Heading </label>
                @Html.TextBoxFor(model => model.Heading, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Heading, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 form-group">
                <label>Blog Type</label>
                <select id="@Html.IdFor(x=>Model.BlogTypeID)" name="@Html.NameFor(x=>Model.BlogTypeID)" class="applyselect">
                    <option>Select Type</option>
                    @if (ViewBag.BlogTypeList != null)
                    {
                        foreach (BlogType.Admin.List item in ViewBag.BlogTypeList)
                        {
                            <option @(Model.BlogTypeID == item.BlogTypeID ? "selected" : "") value="@item.BlogTypeID">@item.TypeName</option>
                        }
                    }
                </select>
                @Html.ValidationMessageFor(model => model.BlogTypeID, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-3 col-md-3 col-sm-6 form-group">
                <label>Category</label>
                @Html.HiddenFor(x => Model.BlogCategoryIDs)
                <select class="applyselect" multiple="multiple" id="ddblogCategory">
                    <option>Select Category</option>
                    @if (ViewBag.BlogCategoryList != null)
                    {
                        foreach (BlogCategory.Admin.List item in ViewBag.BlogCategoryList)
                        {
                            if (string.IsNullOrEmpty(Model.BlogCategoryIDs))
                            {
                                <option value="@item.BlogCategoryID">@item.CategoryName</option>
                            }
                            else
                            {
                                <option @(("@" + Model.BlogCategoryIDs.Replace(",", "@") + "@").Contains("@" + item.BlogCategoryID.ToString() + "@") ? "selected" : "") value="@item.BlogCategoryID">@item.CategoryName</option>
                            }


                        }
                    }
                </select>
                @Html.ValidationMessageFor(model => model.BlogCategoryIDs, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 form-group">
                <label>Tags</label>
                @Html.HiddenFor(x => Model.BlogTagIDs)
                <select class="applyselect" multiple="multiple" id="ddblogTag">
                    <option>Select Tags</option>
                    @if (ViewBag.BlogTagList != null)
                    {
                        foreach (BlogTags.Admin.List item in ViewBag.BlogTagList)
                        {
                            if (string.IsNullOrEmpty(Model.BlogTagIDs))
                            {
                                <option value="@item.BlogTagID">@item.TagName</option>
                            }
                            else
                            {
                                <option @(("@" + Model.BlogTagIDs.Replace(",", "@") + "@").Contains("@" + item.BlogTagID.ToString() + "@") ? "selected" : "") value="@item.BlogTagID">@item.TagName</option>
                            }

                        }
                    }
                </select>
                @Html.ValidationMessageFor(model => model.BlogTagIDs, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">

            <div class="col-lg-3 col-md-3 col-sm-6 form-group">
                <label>Author Name </label>
                @Html.TextBoxFor(model => model.AuthorName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AuthorName, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 form-group">
                <label>Published Date </label>
                @Html.TextBoxFor(model => model.PublishedDate, new { @class = "form-control", type = "Date" })
                @Html.ValidationMessageFor(model => model.PublishedDate, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 form-group">
                <label>Priority<sup>*</sup></label>
                @Html.TextBoxFor(model => model.Priority, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-3 col-md-3 col-sm-6 form-group">
                <label>Target<sup>*</sup></label>
                @Html.EnumDropDownListFor(model => model.Target, "Select", htmlAttributes: new { @class = "form-control applyselect" })
                @Html.ValidationMessageFor(model => model.Target, "", new { @class = "text-danger" })
            </div>


            <div class="col-lg-6 col-md-6 col-sm-6 form-group">
                <label>Blog URL<sup>*</sup></label>
                <div class="input-group">
                    <input type="text" tag-value="@clsCommon.Encrypt("Blog")" tag-id="@Model.BlogID" name="txtURL" id="txtURL" value="@Model.BlogURL" class="form-control" />
                    <span class="input-group-addon">
                        <a id="btn_generateURL"><i class="fa fa-sign-out" aria-hidden="true"></i> Generate url</a>
                    </span>
                    @Html.ValidationMessageFor(model => model.BlogURL, "", new { @class = "text-danger" })
                </div>
                @Html.HiddenFor(model => model.BlogURL, new { @class = "hdnURL" })
                <div class="anchorShowURL">
                    @Model.BlogURL
                </div>
            </div>

            <div class="col-lg-12 col-md-12 col-sm-6 form-group">
                <label>Short Description</label>
                @Html.TextAreaFor(model => model.ShortDesc, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ShortDesc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-6 form-group">
                <label>Description</label>
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-lg-3 col-md-3 col-sm-6 form-group">
                <label>List Image URL </label>
                @Html.TextBoxFor(model => model.ListImageURL, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ListImageURL, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 form-group">
                <label>Detail Image URL </label>
                @Html.TextBoxFor(model => model.DetailImageURL, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DetailImageURL, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 form-group">
                <label>Choose List Image<sup>*</sup></label>
                <a class="btn-slt" onclick="OpenModalForImage()"><strong>Select Image <i class="fa fa-file"></i></strong> </a>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 form-group">
                <label>Choose Detail Image<sup>*</sup></label>
                <a class="btn-slt" onclick="OpenModalForImage1()"><strong>Select Image <i class="fa fa-file"></i></strong> </a>
            </div>
            <div class="col-sm-12"></div>
            <div class="col-lg-6 col-md-6 col-sm-6 form-group">
                @Html.HiddenFor(model => model.ListDocID, new { @class = "hdnselectedDoc_0" })
                <img src="@Model.ListDocURL" class="ImgselectedURL_0 detailimage" />
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 form-group">
                @Html.HiddenFor(model => model.DetailDocID, new { @class = "hdnselectedDoc_1" })
                <img src="@Model.DetailDocURL" class="ImgselectedURL_1 detailimage" />
            </div>

        </div>





        <div class="row">
            <div class="col-md-12 form-group">
                @if (Model.BlogID > 0)
                {
                    <button type="submit" class="btn mtr-o-grn btn-l ripplelink pull-right" name="Command" value="Add"><i class="fa fa-paper-plane" aria-hidden="true"></i> Update</button>
                }
                else
                {
                    <button type="submit" class="btn mtr-o-grn btn-l ripplelink pull-right" name="Command" value="Add"><i class="fa fa-paper-plane" aria-hidden="true"></i> Submit</button>
                }

                <button type="button" class="btn cnl-btn btn-l ripplelink pull-right" onclick="ShowLoadingDialog(); window.location = '@Url.Action("BlogList",new { src = clsCommon.Encrypt(ViewBag.MenuID+"*"+"/Admin/Blog/BlogList") })';"><i class="fa fa-times"></i> Cancel</button>



            </div>
        </div>

    }

</div>
@Html.IncludeVersionedJs(Url.Content("~/ckeditor/ckeditor.js"))
@section scripts    {
    <script>
        CKEDITOR.replace("Description");
        function OnSuccess(obj) {
            if (obj.Status) {
                SuccessToaster(obj.SuccessMessage);
                window.location.href = obj.RedirectURL;
            }
            else {
                CloseLoadingDialog();
                FailToaster(obj.SuccessMessage);

            }
        }

        function OpenModalForImage() {
            $("#MultipleCount").val("0");
            DocumentList(0);
        }
        function OpenModalForImage1() {
            $("#MultipleCount").val("1");
            DocumentList(0);
        }


        $('#ddblogCategory').change(function () {
            GetCategoryValue()
        });

        $('#ddblogTag').change(function () {
            GetTagValue()
        });

        function GetCategoryValue() {
            var ddblogCategory = $("#ddblogCategory").val();
            $("#BlogCategoryIDs").val(ddblogCategory);
        }
        function GetTagValue() {
            var ddblogTag = $("#ddblogTag").val();
            $("#BlogTagIDs").val(ddblogTag);
        }

    </script>
}