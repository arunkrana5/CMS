
@model BlogType.Admin.Add

@using (Ajax.BeginForm("_AddBlogType", "Blog",
        new { src = ViewBag.src },
         new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnBegin = "ShowLoadingDialog()" },
            new { @id = "_AddBlogTypeForm" })
    )
{
    
<div class="row">
    <div class="col-lg-4 col-md-4 col-sm-6 form-group">
        <label>Type Name<sup>*</sup></label>
        @Html.TextBoxFor(model => Model.TypeName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => Model.TypeName, "", new { @class = "text-danger" })
    </div>

    <div class="col-lg-6 col-md-6 col-sm-6 form-group">
        <label>Type URL<sup>*</sup></label>
        <div class="input-group">
            <input type="text" tag-value="@clsCommon.Encrypt("BlogType")" tag-id="@Model.BlogTypeID" name="txtURL" id="txtURL" value="@Model.TypeURL" class="form-control" />
            <span class="input-group-addon">
                <a id="btn_generateURL"><i class="fa fa-sign-out" aria-hidden="true"></i> Generate url</a>
            </span>
            @Html.ValidationMessageFor(model => model.TypeURL, "", new { @class = "text-danger" })
        </div>
        @Html.HiddenFor(model => model.TypeURL, new { @class = "hdnURL" })
        <div class="anchorShowURL">
            @Model.TypeURL
        </div>
    </div>

    

    <div class="col-lg-12">

        @if (Model.BlogTypeID > 0)
        {
            <button type="submit" class="btn mtr-o-grn btn-l ripplelink pull-right" name="Command" value="Add"><i class="fa fa-paper-plane" aria-hidden="true"></i> Update</button>
        }
        else
        {
            <button type="submit" class="btn mtr-o-grn btn-l ripplelink pull-right" name="Command" value="Add"><i class="fa fa-paper-plane" aria-hidden="true"></i> Submit</button>
        }

    </div>
</div>
}


